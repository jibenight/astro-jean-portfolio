---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Home from '../components/Home.astro';
import About from '../components/About.astro';
import Portfolio from '../components/Portfolio.astro';
import Skills from '../components/Skills.astro';
import Contact from '../components/Contact.astro';
---

<Layout>
  
  <!-- Home -->
  <div id="home-wrapper" class="panel active">
    <Home />
  </div>

 <!-- Header -->
 <div id="header-wrapper" class="panel active">
    <Header />
  </div>


  <!-- Autres sections (hidden) -->
  <div id="about-wrapper" class="panel hidden">
    <About />
  </div>
  <div id="contact-wrapper" class="panel hidden">
    <Contact />
  </div>
  <div id="skills-wrapper" class="panel hidden">
    <Skills />
  </div>
  <div id="portfolio-wrapper" class="panel hidden">
    <Portfolio />
  </div>

  <!-- Script principal -->
  <script is:inline>
    // Récupération des panels
    const headerEl = document.getElementById('header-wrapper');
    const homeEl   = document.getElementById('home-wrapper');

    const sections = {
      about:     document.getElementById('about-wrapper'),
      contact:   document.getElementById('contact-wrapper'),
      skills:    document.getElementById('skills-wrapper'),
      portfolio: document.getElementById('portfolio-wrapper'),
    };

    // Au chargement, attacher les clics du Header
    window.addEventListener('DOMContentLoaded', () => {
      const navItems = document.querySelectorAll('.nav-item');
      navItems.forEach(item => {
        item.addEventListener('click', () => {
          const targetId = item.getAttribute('data-target');
          if (!targetId) return;
          
          switch (targetId) {
            case 'about':
              // about => in/down, header+home => out/down
              slideIn(sections['about'], 'down');
              slideOut(headerEl, 'down');
              slideOut(homeEl, 'down');
              break;

            case 'contact':
              // contact => in/left, header+home => out/left
              slideIn(sections['contact'], 'left');
              slideOut(headerEl, 'left');
              slideOut(homeEl, 'left');
              break;

            case 'skills':
              // skills => in/up, header+home => out/up
              slideIn(sections['skills'], 'up');
              slideOut(headerEl, 'up');
              slideOut(homeEl, 'up');
              break;

            case 'portfolio':
              // portfolio => in/right, header+home => out/right
              slideIn(sections['portfolio'], 'right');
              slideOut(headerEl, 'right');
              slideOut(homeEl, 'right');
              break;
          }
        });
      });
    });

    // Fermeture depuis chaque composant
    // On l'expose en global pour pouvoir l'appeler depuis About.astro, etc.
    window.closeSection = function(sectionId) {
      switch (sectionId) {
        case 'about':
          // about => out/up, header+home => in/up
          slideOut(sections['about'], 'up');
          slideIn(headerEl, 'up');
          slideIn(homeEl, 'up');
          break;

        case 'contact':
          // contact => out/right, header+home => in/right
          slideOut(sections['contact'], 'right');
          slideIn(headerEl, 'right');
          slideIn(homeEl, 'right');
          break;

        case 'skills':
          // skills => out/down, header+home => in/down
          slideOut(sections['skills'], 'down');
          slideIn(headerEl, 'down');
          slideIn(homeEl, 'down');
          break;

        case 'portfolio':
          // portfolio => out/left, header+home => in/left
          slideOut(sections['portfolio'], 'left');
          slideIn(headerEl, 'left');
          slideIn(homeEl, 'left');
          break;
      }
    }

    // Helpers : slideIn / slideOut
    function slideIn(el, direction) {
      if (!el) return;
      el.classList.remove('hidden');
      void el.offsetWidth; // force reflow
      
      // Sélectionne la classe "slide-in-XXX" en fonction de direction
      const animClass = {
        down: 'slide-in-down',
        up: 'slide-in-up',
        left: 'slide-in-left',
        right: 'slide-in-right',
      }[direction];

      el.classList.add(animClass);
      el.addEventListener('animationend', function endAnim() {
        el.classList.remove(animClass);
        el.classList.add('active');
        el.removeEventListener('animationend', endAnim);
      }, { once: true });
    }

    function slideOut(el, direction) {
      if (!el) return;
      el.classList.remove('active');
      
      // Sélectionne la classe "slide-out-XXX" en fonction de direction
      const animClass = {
        down: 'slide-out-down',
        up: 'slide-out-up',
        left: 'slide-out-left',
        right: 'slide-out-right',
      }[direction];

      el.classList.add(animClass);
      el.addEventListener('animationend', function endAnim() {
        el.classList.remove(animClass);
        el.classList.add('hidden');
        el.removeEventListener('animationend', endAnim);
      }, { once: true });
    }
  </script>
</Layout>
